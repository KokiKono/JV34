/***************************
 * 学籍番号:40313
 * 作成者　:k.koki
 * 作成日　:2016/11/10
 * 内容　　:ログインに関する制御を定義する抽象クラス。
 * *************************/
package beans;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.SQLException;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;

import beans.DBManager.PreparedStatementByKoki;

public abstract class LoginSuper implements LoginInterface{
	private HttpServlet servlet;
	private HttpServletRequest request;
	public LoginSuper(HttpServlet servlet,HttpServletRequest request) {
		// TODO 自動生成されたコンストラクター・スタブ
		this.servlet=servlet;
		this.request=request;
	}


	/**
	 * ログインをチャレンジします。
	 * @auther 浩生
	 * 2016/11/10
	 * @param param リクエストで受け取るパラメータ名を指定してください。
	 * 				このパラメータをString型で取得してSQLファイルのステートメントにString型で
	 * 				設定します。
	 * 				ステートメントはパラメータ名と同じにしてください。
	 * 				ステートメントはDBManager.getPrepardStatementByKokiを使用します。
	 * @return
	 * @throws ClassNotFoundException
	 * @throws SQLException
	 * @see DBManager
	 * @see DBManager#getPreparedStatement(String)
	 * @see PreparedStatementByKoki
	 * @see PreparedStatementByKoki#setString(String, String)
	 */
	public String challenge(String... param) throws ClassNotFoundException, SQLException{
		DBManager dbManager=new DBManager(Dao.DB.val);
		PreparedStatementByKoki statementByKoki=dbManager.getStatementByKoki(readSql(this.servlet, Dao.SQL))
	}

	/**
	 * SQLファイルを読み込み増す。
	 * @auther 浩生
	 * 2016/11/10
	 * @param servlet
	 * @param path
	 * @return
	 */
	protected static String readSql(HttpServlet servlet,String path){
		return readSql(servlet, path,"");
	}
	/**
	 * SQLファイルを読み込む際に行末にlineをつけて取得します。
	 * @auther 浩生
	 * 2016/11/10
	 * @param servlet
	 * @param path
	 * @param line
	 * @return
	 */
	protected static String readSql(HttpServlet servlet,String path,String line){
		String path=servlet.getServletContext().getRealPath("/WEB-INF/sql/"+path);
		StringBuilder builder=new StringBuilder();

		try{
			BufferedReader reader=new BufferedReader(new InputStreamReader(new FileInputStream(path), "UTF-8"));
			String string=reader.readLine();
			while(string!=null){
				builder.append(string);
				builder.append(line);
				string=reader.readLine();
			}
		}catch(IOException e){
			e.printStackTrace();
			return null;
		}
		return builder.toString();
	}


}
